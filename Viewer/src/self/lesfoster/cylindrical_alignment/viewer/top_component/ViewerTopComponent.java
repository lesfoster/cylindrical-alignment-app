/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package self.lesfoster.cylindrical_alignment.viewer.top_component;

import java.awt.BorderLayout;
import java.io.File;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;
import org.openide.util.lookup.Lookups;
import self.lesfoster.cylindrical_alignment.data_source.DataSource;
import self.lesfoster.cylindrical_alignment.data_source.DataSourceFactory;
import self.lesfoster.cylindrical_alignment.effector.Effected;
import self.lesfoster.cylindrical_alignment.viewer.java_fx.CylinderContainer;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
		dtd = "-//self.lesfoster.cylindrical_alignment.viewer.top_component//Viewer//EN",
		autostore = false
)
@TopComponent.Description(
		preferredID = ViewerTopComponent.PREFERRED_ID,
		//iconBase="SET/PATH/TO/ICON/HERE", 
		persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "self.lesfoster.cylindrical_alignment.viewer.top_component.ViewerTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
		displayName = "#CTL_ViewerAction",
		preferredID = ViewerTopComponent.PREFERRED_ID
)
@Messages({
	"CTL_ViewerAction=Viewer",
	"CTL_ViewerTopComponent=Viewer Window",
	"HINT_ViewerTopComponent=This is a Viewer window"
})
public final class ViewerTopComponent extends TopComponent {
	public static final String PREFERRED_ID = "ViewerTopComponent";

	public ViewerTopComponent() {
		initComponents();
		setName(Bundle.CTL_ViewerTopComponent());
		setToolTipText(Bundle.HINT_ViewerTopComponent());

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();

        contentPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    // End of variables declaration//GEN-END:variables
	@Override
	public void componentOpened() {
		String filePrefix = "C:\\current_projects\\gitfiles\\CylindricalAlignmentApp\\samples";
		//String filePath = filePrefix + "\\pyrimidinergic_receptor\\gi66932905.BlastOutput.xml";
		//String filePath = filePrefix + "\\h4_muscle_histones\\h4_muscle.cyl.xml";
		//String filePath = filePrefix + "\\gene_machine\\gene_machine_2.cyl.xml";
		//String filePath = filePrefix + "\\gff3\\chromosome_3F.gff";
		String filePath = filePrefix + "\\zebra_mussel_byssal\\AF265353_1.cyl.xml";
		if (! new File(filePath).exists()) {
			throw new IllegalArgumentException(filePath + " does not exist.");
		}
		DataSource dataSource = DataSourceFactory.getSourceForFile(filePath);
		CylinderContainer container = new CylinderContainer(dataSource);
		associateLookup(Lookups.singleton(container));
		contentPanel.add(container, BorderLayout.CENTER);
	}

	@Override
	public void componentClosed() {
		contentPanel.removeAll();
	}

	void writeProperties(java.util.Properties p) {
		// better to version settings since initial version as advocated at
		// http://wiki.apidesign.org/wiki/PropertyFiles
		p.setProperty("version", "1.0");
		// TODO store your settings
	}

	void readProperties(java.util.Properties p) {
		String version = p.getProperty("version");
		// TODO read your settings according to their version
	}

	private static class Affected {

		public Affected() {
		}
	}
}
