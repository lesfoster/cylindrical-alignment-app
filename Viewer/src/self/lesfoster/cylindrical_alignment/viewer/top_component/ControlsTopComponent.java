/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package self.lesfoster.cylindrical_alignment.viewer.top_component;

import java.awt.BorderLayout;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import self.lesfoster.cylindrical_alignment.settings.UnifiedSettingsPanel;

/**
 * Platform-managed controls for the main view.
 */
@ConvertAsProperties(
		dtd = "-//self.lesfoster.cylindrical_alignment.viewer.top_component//Controls//EN",
		autostore = false
)
@TopComponent.Description(
		preferredID = ControlsTopComponent.CONTROLS_TOP_COMPONENT_PREFERRED_ID,
		//iconBase="SET/PATH/TO/ICON/HERE", 
		persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "properties", position = 200, openAtStartup = true)
@ActionID(category = "Window", id = "self.lesfoster.cylindrical_alignment.viewer.top_component.ControlsTopComponent")
@ActionReference(path = "Menu/Window", position = 335)
@TopComponent.OpenActionRegistration(
		displayName = "#CTL_ControlsAction",
		preferredID = "ControlsTopComponent"
)
@Messages({
	"CTL_ControlsAction=Controls",
	"CTL_ControlsTopComponent=Settings for Cylinder Widget",
	"HINT_ControlsTopComponent=These controls effect what happens in cyl view."
})
public final class ControlsTopComponent extends TopComponent {
	public static final String CONTROLS_TOP_COMPONENT_PREFERRED_ID = "ControlsTopComponent";

	public ControlsTopComponent() {
		initComponents();
		setName(Bundle.CTL_ControlsTopComponent());
		setToolTipText(Bundle.HINT_ControlsTopComponent());

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        contentPanel.setLayout(null);
        add(contentPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    // End of variables declaration//GEN-END:variables
	@Override
	public void componentOpened() {
		contentPanel.setLayout(new BorderLayout());
		unifiedSettingsPanel = new UnifiedSettingsPanel();
		contentPanel.add(unifiedSettingsPanel, BorderLayout.CENTER);
	}
	public UnifiedSettingsPanel unifiedSettingsPanel;

	@Override
	public void componentClosed() {
		if (unifiedSettingsPanel != null) {
			unifiedSettingsPanel.close();
			contentPanel.remove(unifiedSettingsPanel);
		}
	}

	void writeProperties(java.util.Properties p) {
		// better to version settings since initial version as advocated at
		// http://wiki.apidesign.org/wiki/PropertyFiles
		p.setProperty("version", "1.0");
		// TODO store your settings
	}

	void readProperties(java.util.Properties p) {
		String version = p.getProperty("version");
		// TODO read your settings according to their version
	}
}
